=head1 SIAM plugin for Torrus


=head2 Installation

Follow the Torrus installation guide for the main software installation.

Install the SIAM Perl module from CPAN:

  perl -MCPAN -e 'install SIAM'

Unpack the plugin distribution package in some directory:

  gzip -dc tp-siam-1.X.tar.gz | tar xvf -

Then run the Torrus plugin installation utility, pointing to the
unpacked plugin directory:

  torrus install_plugin tp-siam-1.X


=head2 Overview

Service Inventory Abstraction Model (SIAM) is a Perl library
available at CPAN. It is designed to be an abstraction interface between
enterprise-specific inventory database and various programs, such as
Torrus. SIAM is supposed to be used with an enterprise-specific driver
which maps the inventory data into SIAM objects and attributes.

The C<tp-siam> plugin consists of command-line utilities and a
DevDiscover module.


=head2 siam_genddx utility

The C<siam_genddx> command-line utility performs the following steps:

=over 4

=item * Retrieve the SNMP devices matching the C<torrus.server> attribute;

=item * Create discovery instruction (DDX) files for each Torrus tree
as found in SIAM data.

=back

Command-line arguments:

  torrus siam_genddx [options...]

    Options:
     --server=HOSTNAME       Torrus server to match in SIAM
     --pddx=PATH             Path to store DDX files
     --pbundles=PATH         Path to store bundles XML
     --pnodes=PATH           Path to store per-node XML
     --prrd=PATH             RRD data storage path
     --verbose               print extra information
     --debug                 print debugging information

By default, the local server's hostname is matched against the
C<torrus.server> attribute in device objects. The resulting DDX files
are stored in the default I<discovery> directory. The DDX files are
named as "siam-I<TREE>.ddx" for each given tree name supplied by SIAM
parameters. The DDX files would store the generated bundle files in
I<xmlconfig/bundles/>, and device-specific XML files in
I<xmlconfig/nodes/> subdirectories of the standard XML configuration
location.


The file C<siam-config.pl> defines all default values and DDX
parameters. These values can be modified in your site-specific
F<siam-siteconfig.pl>.





=head2 Torrus::DevDiscover::SIAMDD module

The discovery module C<Torrus::DevDiscover::SIAMDD> tries to match the
device component names in SIAM against those on the network devices. The
resulting configuration contains I<nodeid> values imported from SIAM and
assigned to corresponding device interfaces. As a result, external
programs can fetch Torrus data by using the enterprise-specific service
identifiers.



=head2 siam_rrd_fetch utility

C<siam_rrd_fetch> retrieves a list of devices and their corresponding
service components, and then retrieves the aggregated data from RRD
files. The aggregated data is returned to SIAM via a condition
"torrus.fetch.data" on the SIAM::ServiceComponent objects.

Usage:
  
  torrus siam_rrdfetch [options...]

  Options:
    --server=HOSTNAME       Torrus server to match in SIAM
    --verbose               print extra information
    --debug                 print debugging information




=head2 SIAM Attributes

SIAM::Device object attributes used by the plugin:

=over 4

=item * siam.object.complete

Only complete device objects are processed. The incomplete devices are ignored.

=item * torrus.server

This attribute is matched when the SIAM command-line utility imports the
devicesinto the DDX files.

=item * torrus.tree

The Torrus tree name. It should match an existing tree name in Torrus
configuration.

=item * siam.device.name

Unique device name which is used for C<system-id> parameter in Torrus.

=item * siam.device.inventory_id

Unique device identifier that is used to retrieve the corresponding
SIAM::Device object from SIAM.

=item * snmp.managed

Must return a true value in order for the device to be included in
further processing.

=item * snmp.host, snmp.version, snmp.community, snmp.timeout, snmp.retries

Optional attributes that may override the default values.

=item * torrus.subtree_path

Optional attribute, identifies the subtree name where the device node is
placed.

=item * torrus.create_device_components

If true, then SIAMDD will create SIAM::DeviceComponent objects for the
devices according to the discovery results. If an interface is removed
from an SNMP device, the corresponding devic component object will also
be removed. SIAMDD assumes that C<torrus.nodeid> attribute is
automatically calculated by the underlying inventory database when
device component objects are created.

=item * torrus.if.adminup_only

If true, all admin-down interfaces are excluded from discovery results.

=item * torrus.if.siam_known_only

If true, all interfaces which were not matched against SIAM objects are
excluded from discovery results.

=back



SIAM::DeviceComponent object attributes used by the discovery module:

=over 4

=item * siam.object.complete

Only complete service component objects are processed. The incomplete
ones are ignored.

=item * siam.devc.type

Type of device component. Supported values: C<IFMIB.Port>, C<Power.PDU>

=item * siam.devc.name, torrus.port.shortname

These attributes are matched against the IF-MIB interface names in order
to find the corresponding ifIndex. This list can be modified in
I<siam-siteconfig.pl>.

=item * torrus.nodeid

Unique value of C<nodeid> which will be assigned to the matched interface.

=item * torrus.port.bandwidth

Optional service bandwidth in bit per second. If defined, the
corresponding bandwidth limit parameters are applied to the interface
configuration.

=item * torrus.port.monitors

Optional comma-separated list of monitor names as defined in C<monitor>
XML configuration parameter.

=item * torrus.port.monitor_vars

Optional key=value pairs separated by semicolumns. These pairs are added
to the C<monitor-vars> parameter in XML configuration.

=back



SIAM::ServiceComponent attributes used by siam_rrdfetch:

=over 4

=item * torrus.fetch.activated

siam_rrdfetch processes only service components where this attribute is
set to 1.

=item * torrus.fetch.max_intervals

(Optional) maximum number of aggregation intervals to retrieve. Default: 14.

=item * torrus.fetch.aggr_interval

(Optional) aggregation interval. Default: 86400 (24 hours).

=back


SIAM::ServiceComponent computable 'torrus.fetch.latest_available' is
used to determine the UNIX timestamp of the latest data already fetched
in a previous run.



=head2 SIAM conditions

Conditions are used for sending the SNMP discovery status events back
into the SIAM driver. They can be used for diagnostics and reporting
purposes.

=over 4

=item torrus.imported

This condition is applied to SIAM::Device and SIAM::ServiceUnit
objects. The value is a status code and a status message separated by
semicolon (;). Non-zero status code corresponds to success, and no
status message is given. Zero status code indicates an error, and the
status message explains the details.

=item torrus.warning

The condition is applied to SIAM::ServiceUnit in case of non-critical
problems. The supplied value is a message string with the warning
message.

=item torrus.fetch.data

This condition is set by siam_rrdfetch on SIAM::ServiceDataElement objects.
It contains a hashref with the retrieved data:
timestamp->counter->CF->value

=item siam.devc.link_svcc

This condition is set by SIAMDD on DeviceComponent objects which have
corresponding ServiceComponent identifiers in their descriptions. This
instruct the SIAM back-end to create a pointer from the Service
Component to the DeviceComponent object.

=back


=head2 Other attributes

The following attributes are related to Torrus, but not used by the
plugin itself:

=over 4

=item stats.torrus.available

Third-party programs (e.g. I<Extopus>) are encouraged to retrieve Torrus
statistics for SIAM objects that have this attribute set to 1.

=item stats.torrus.nodeid

This attribute contains the NodeID prefix that external programs can use
for retrieving Torrus data for a given object.

=item torrus.tree-url

This attribute in SIAM::Device presents the HTTP or HTTPS URL that is
used to access the torrus server and the given Torrus tree.

=back


=head2 siam_rebuild utility

The C<siam_rebuild> command-line utility keeps track of new devices
being added to SIAM database, and executes SNMP discovery and XML
compilation for those devices only.

Command-line arguments:

  torrus siam_rebuild [options...]
    Options:
     --server=HOSTNAME       Torrus server to match in SIAM [tsrTORRUS02]
     --full                  Full rediscovery of all devices
     --force=RE              Force rediscovery of matching device names
     --pddx=PATH             Path to store DDX files
     --pbundles=PATH         Path to store bundles XML
     --pnodes=PATH           Path to store per-node XML
     --prrd=PATH             RRD data storage path
     --verbose               print extra information
     --debug                 print debugging information


The utulity also checks if C<torrus.rediscover> is true, and enforces a
rediscovery for such devices.


=head1 Author

Copyright (c) 2011-2017 Stanislav Sinyagin E<lt>ssinyagin@k-open.comE<gt>
